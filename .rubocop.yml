# Relaxed.Ruby.Style

require:
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec

AllCops:
  Exclude:
    - 'vendor/**/*'
    - '**/vendor/**/*'
    - '*/spec/dummy/**/*'
    - 'sandbox/**/*'
    - '**/templates/**/*'
    - 'guides/node_modules/**/*'
    - '**/spec/system/**/*'
    - 'app/helpers/spree/base_helper.rb'
    - 'db/schema.rb'
  TargetRubyVersion: 3.1.2

Gemspec/DeprecatedAttributeAssignment:
  Enabled: true
Gemspec/RequireMFA: # new in 1.23
  Enabled: true
Layout/LineEndStringConcatenationIndentation: # new in 1.18
  Enabled: true
Layout/SpaceBeforeBrackets: # new in 1.7
  Enabled: true
Lint/AmbiguousAssignment: # new in 1.7
  Enabled: true
Lint/AmbiguousOperatorPrecedence: # new in 1.21
  Enabled: true
Lint/AmbiguousRange: # new in 1.19
  Enabled: true
Lint/DeprecatedConstants: # new in 1.8
  Enabled: true
Lint/DuplicateBranch: # new in 1.3
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement: # new in 1.1
  Enabled: true
Lint/EmptyBlock: # new in 1.1
  Enabled: true
Lint/EmptyClass: # new in 1.3
  Enabled: true
Lint/EmptyInPattern: # new in 1.16
  Enabled: true
Lint/IncompatibleIoSelectWithFiberScheduler: # new in 1.21
  Enabled: true
Lint/LambdaWithoutLiteralBlock: # new in 1.8
  Enabled: true
Lint/NoReturnInBeginEndBlocks: # new in 1.2
  Enabled: true
Lint/NumberedParameterAssignment: # new in 1.9
  Enabled: true
Lint/OrAssignmentToConstant: # new in 1.9
  Enabled: true
Lint/RedundantDirGlobSort: # new in 1.8
  Enabled: true
Lint/RequireRelativeSelfPath: # new in 1.22
  Enabled: true
Lint/SymbolConversion: # new in 1.9
  Enabled: true
Lint/ToEnumArguments: # new in 1.1
  Enabled: true
Lint/TripleQuotes: # new in 1.9
  Enabled: true
Lint/UnexpectedBlockArity: # new in 1.5
  Enabled: true
Lint/UnmodifiedReduceAccumulator: # new in 1.1
  Enabled: true
Lint/UselessRuby2Keywords: # new in 1.23
  Enabled: true
Security/IoMethods: # new in 1.22
  Enabled: true
Style/ArgumentsForwarding: # new in 1.1
  Enabled: true
Style/CollectionCompact: # new in 1.2
  Enabled: true
Style/DocumentDynamicEvalDefinition: # new in 1.1
  Enabled: true
Style/EndlessMethod: # new in 1.8
  Enabled: true
Style/HashConversion: # new in 1.10
  Enabled: true
Style/HashExcept: # new in 1.7
  Enabled: true
Style/IfWithBooleanLiteralBranches: # new in 1.9
  Enabled: true
Style/InPatternThen: # new in 1.16
  Enabled: true
Style/MultilineInPatternThen: # new in 1.16
  Enabled: true
Style/NegatedIfElseCondition: # new in 1.2
  Enabled: true
Style/NilLambda: # new in 1.3
  Enabled: true
Style/NumberedParameters: # new in 1.22
  Enabled: true
Style/NumberedParametersLimit: # new in 1.22
  Enabled: true
Style/OpenStructUse: # new in 1.23
  Enabled: true
Style/QuotedSymbols: # new in 1.16
  Enabled: true
Style/RedundantArgument: # new in 1.4
  Enabled: true
Style/RedundantSelfAssignmentBranch: # new in 1.19
  Enabled: true
Style/SelectByRegexp: # new in 1.22
  Enabled: true
Style/StringChars: # new in 1.12
  Enabled: true
Style/SwapValues: # new in 1.1
  Enabled: true
Performance/AncestorsInclude: # new in 1.7
  Enabled: true
Performance/BigDecimalWithNumericArgument: # new in 1.7
  Enabled: true
Performance/BlockGivenWithExplicitBlock: # new in 1.9
  Enabled: true
Performance/CollectionLiteralInLoop: # new in 1.8
  Enabled: true
Performance/ConcurrentMonotonicTime: # new in 1.12
  Enabled: true
Performance/ConstantRegexp: # new in 1.9
  Enabled: true
Performance/MapCompact: # new in 1.11
  Enabled: true
Performance/MethodObjectAsBlock: # new in 1.9
  Enabled: true
Performance/RedundantEqualityComparisonBlock: # new in 1.10
  Enabled: true
Performance/RedundantSortBlock: # new in 1.7
  Enabled: true
Performance/RedundantSplitRegexpArgument: # new in 1.10
  Enabled: true
Performance/RedundantStringChars: # new in 1.7
  Enabled: true
Performance/ReverseFirst: # new in 1.7
  Enabled: true
Performance/SortReverse: # new in 1.7
  Enabled: true
Performance/Squeeze: # new in 1.7
  Enabled: true
Performance/StringInclude: # new in 1.7
  Enabled: true
Performance/Sum: # new in 1.8
  Enabled: true
Rails/ActiveRecordCallbacksOrder: # new in 2.7
  Enabled: true
Rails/AddColumnIndex: # new in 2.11
  Enabled: true
Rails/AfterCommitOverride: # new in 2.8
  Enabled: true
Rails/AttributeDefaultBlockValue: # new in 2.9
  Enabled: true
Rails/EagerEvaluationLogMessage: # new in 2.11
  Enabled: true
Rails/ExpandedDateRange: # new in 2.11
  Enabled: true
Rails/FindById: # new in 2.7
  Enabled: true
Rails/I18nLocaleAssignment: # new in 2.11
  Enabled: true
Rails/Inquiry: # new in 2.7
  Enabled: true
Rails/MailerName: # new in 2.7
  Enabled: true
Rails/MatchRoute: # new in 2.7
  Enabled: true
Rails/NegateInclude: # new in 2.7
  Enabled: true
Rails/Pluck: # new in 2.7
  Enabled: true
Rails/PluckInWhere: # new in 2.7
  Enabled: true
Rails/RedundantTravelBack: # new in 2.12
  Enabled: true
Rails/RenderInline: # new in 2.7
  Enabled: true
Rails/RenderPlainText: # new in 2.7
  Enabled: true
Rails/ShortI18n: # new in 2.7
  Enabled: true
Rails/SquishedSQLHeredocs: # new in 2.8
  Enabled: true
Rails/TimeZoneAssignment: # new in 2.10
  Enabled: true
Rails/UnusedIgnoredColumns: # new in 2.11
  Enabled: true
Rails/WhereEquals: # new in 2.9
  Enabled: true
Rails/WhereExists: # new in 2.7
  Enabled: true
Rails/WhereNot: # new in 2.8
  Enabled: true


# We use class vars and will have to continue doing so for compatability
Style/ClassVars:
  Enabled: false

# We need these names for backwards compatability
Naming/PredicateName:
  Enabled: false

# We want to name rescued errors as error not simply e.
Naming/RescuedExceptionsVariableName:
  Enabled: false

Naming/AccessorMethodName:
  Enabled: false

# This has been used for customization
Style/MutableConstant:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

Style/EmptyElse:
  Enabled: false

Style/GuardClause:
  Enabled: false

Style/Next:
  Enabled: false

Style/NumericPredicate:
  Enabled: false

Style/WordArray:
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

Performance/Count:
  Enabled: false

Style/RaiseArgs:
  Enabled: false

Naming/BinaryOperatorParameterName:
  Enabled: false

# We can use good judgement here
Style/RegexpLiteral:
  Enabled: false

# Unicode comments are useful
Style/AsciiComments:
  Enabled: false

Layout/EndAlignment:
  Enabled: false

Layout/ElseAlignment:
  Enabled: false

Layout/IndentationWidth:
  Enabled: false

Layout/ParameterAlignment:
  Enabled: false

Layout/ClosingParenthesisIndentation:
  Enabled: false

Layout/MultilineMethodCallIndentation:
  Enabled: false

Layout/FirstArrayElementIndentation:
  Enabled: false

Layout/FirstHashElementIndentation:
  Enabled: false

Layout/HashAlignment:
  Enabled: false

Style/TrailingCommaInArguments:
  Enabled: false

Style/TrailingCommaInArrayLiteral:
  Enabled: false

Style/TrailingCommaInHashLiteral:
  Enabled: false

# Symbol Arrays are ok and the %i syntax widely unknown
Style/SymbolArray:
  Enabled: false

Rails/DynamicFindBy:
  Whitelist:
    - find_by_param
    - find_by_param!

# It's okay to skip model validations to setup a spec.
Rails/SkipsModelValidations:
  Exclude:
    - '**/spec/**/*'

# We use a lot of
#
#     expect {
#       something
#     }.to { happen }
#
# syntax in the specs files.
Lint/AmbiguousBlockAssociation:
  Exclude:
    - '*/spec/**/*'
    - 'spec/**/*' # For the benefit of apps that inherit from this config

# We use eval to add common_spree_dependencies into the Gemfiles of each of our gems
Security/Eval:
  Exclude:
    - 'Gemfile'
    - 'common_spree_dependencies.rb'
    - '*/Gemfile'

Naming/VariableNumber:
  Enabled: false

# Write empty methods as you wish.
Style/EmptyMethod:
  Enabled: false

# From http://relaxed.ruby.style/

Style/Alias:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylealias

Style/BeginBlock:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylebeginblock

Style/BlockDelimiters:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styleblockdelimiters

Style/Documentation:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styledocumentation

Layout/DotPosition:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styledotposition

Style/DoubleNegation:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styledoublenegation

Style/EndBlock:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styleendblock

Style/FormatString:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styleformatstring

Style/IfUnlessModifier:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styleifunlessmodifier

Style/Lambda:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylelambda

Style/ModuleFunction:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylemodulefunction

Style/MultilineBlockChain:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylemultilineblockchain

Style/NegatedIf:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylenegatedif

Style/NegatedWhile:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylenegatedwhile

Style/ParallelAssignment:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styleparallelassignment

Style/PercentLiteralDelimiters:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylepercentliteraldelimiters

Style/PerlBackrefs:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#styleperlbackrefs

Style/Semicolon:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylesemicolon

Style/SignalException:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylesignalexception

Style/SingleLineBlockParams:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylesinglelineblockparams

Style/SingleLineMethods:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylesinglelinemethods

Layout/SpaceBeforeBlockBraces:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylespacebeforeblockbraces

Layout/SpaceInsideParens:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylespaceinsideparens

Style/SpecialGlobalVars:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylespecialglobalvars

Style/StringLiterals:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylestringliterals

Style/SymbolProc:
  Enabled: false

Style/TernaryParentheses:
  Enabled: false

Style/WhileUntilModifier:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#stylewhileuntilmodifier

Lint/AmbiguousRegexpLiteral:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#lintambiguousregexpliteral

Lint/AssignmentInCondition:
  Enabled: false
  StyleGuide: http://relaxed.ruby.style/#lintassignmentincondition

Metrics/AbcSize:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Layout/LineLength:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

Bundler/OrderedGems:
  Enabled: false

Style/NumericLiterals:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always

# json.() is idiomatic in jbuilder files
Style/LambdaCall:
  Enabled: false

Naming/MethodParameterName:
  AllowedNames:
    - id
    - to
    - _

# Rubocop doesn't understand side-effects
Style/IdenticalConditionalBranches:
  Enabled: false

Naming/MemoizedInstanceVariableName:
  Enabled: false

Lint/BinaryOperatorWithIdenticalOperands:
  Enabled: false

Lint/SuppressedException:
  Enabled: false

Style/RedundantPercentQ:
  Enabled: true
  Exclude:
    - 'spec/components/image_component_spec.rb'

Layout/LineContinuationLeadingSpace: # new in 1.31
  Enabled: true
Layout/LineContinuationSpacing: # new in 1.31
  Enabled: true
Lint/ConstantOverwrittenInRescue: # new in 1.31
  Enabled: true
Lint/DuplicateMagicComment: # new in 1.37
  Enabled: true
Lint/NonAtomicFileOperation: # new in 1.31
  Enabled: true
Lint/RefinementImportMethods: # new in 1.27
  Enabled: true
Lint/RequireRangeParentheses: # new in 1.32
  Enabled: true
Naming/BlockForwarding: # new in 1.24
  Enabled: true
Security/CompoundHash: # new in 1.28
  Enabled: true
Style/EmptyHeredoc: # new in 1.32
  Enabled: true
Style/EnvHome: # new in 1.29
  Enabled: true
Style/FetchEnvVar: # new in 1.28
  Enabled: true
Style/FileRead: # new in 1.24
  Enabled: true
Style/FileWrite: # new in 1.24
  Enabled: true
Style/MagicCommentFormat: # new in 1.35
  Enabled: true
Style/MapCompactWithConditionalBlock: # new in 1.30
  Enabled: true
Style/MapToHash: # new in 1.24
  Enabled: true
Style/NestedFileDirname: # new in 1.26
  Enabled: true
Style/ObjectThen: # new in 1.28
  Enabled: true
Style/OperatorMethodCall: # new in 1.37
  Enabled: true
Style/RedundantEach: # new in 1.38
  Enabled: true
Style/RedundantInitialize: # new in 1.27
  Enabled: true
Style/RedundantStringEscape: # new in 1.37
  Enabled: true
Performance/StringIdentifierArgument: # new in 1.13
  Enabled: true
RSpec/ExcessiveDocstringSpacing: # new in 2.5
  Enabled: true
RSpec/IdenticalEqualityAssertion: # new in 2.4
  Enabled: true
RSpec/SubjectDeclaration: # new in 2.5
  Enabled: true
RSpec/Rails/AvoidSetupHook: # new in 2.4
  Enabled: true
Rails/ActionControllerFlashBeforeRender: # new in 2.16
  Enabled: true
Rails/ActionControllerTestCase: # new in 2.14
  Enabled: true
Rails/ActiveSupportOnLoad: # new in 2.16
  Enabled: true
Rails/CompactBlank: # new in 2.13
  Enabled: true
Rails/DeprecatedActiveModelErrorsMethods: # new in 2.14
  Enabled: true
Rails/DotSeparatedKeys: # new in 2.15
  Enabled: true
Rails/DuplicateAssociation: # new in 2.14
  Enabled: true
Rails/DuplicateScope: # new in 2.14
  Enabled: true
Rails/DurationArithmetic: # new in 2.13
  Enabled: true
Rails/FreezeTime: # new in 2.16
  Enabled: true
Rails/I18nLazyLookup: # new in 2.14
  Enabled: true
Rails/I18nLocaleTexts: # new in 2.14
  Enabled: true
Rails/MigrationClassName: # new in 2.14
  Enabled: true
Rails/RedundantPresenceValidationOnBelongsTo: # new in 2.13
  Enabled: true
Rails/RootJoinChain: # new in 2.13
  Enabled: true
Rails/RootPathnameMethods: # new in 2.16
  Enabled: true
Rails/RootPublicPath: # new in 2.15
  Enabled: true
Rails/StripHeredoc: # new in 2.15
  Enabled: true
Rails/ToFormattedS: # new in 2.15
  Enabled: true
Rails/ToSWithArgument: # new in 2.16
  Enabled: true
Rails/TopLevelHashWithIndifferentAccess: # new in 2.16
  Enabled: true
Rails/TransactionExitStatement: # new in 2.14
  Enabled: true
Rails/WhereMissing: # new in 2.16
  Enabled: true
RSpec/BeEq: # new in 2.9.0
  Enabled: true
RSpec/BeNil: # new in 2.9.0
  Enabled: true
RSpec/ChangeByZero: # new in 2.11.0
  Enabled: true
RSpec/VerifiedDoubleReference: # new in 2.10.0
  Enabled: true
RSpec/FactoryBot/SyntaxMethods: # new in 2.7
  Enabled: true
RSpec/NestedGroups:
  Enabled: false
Style/ArrayIntersect: # new in 1.40
  Enabled: true
Style/ConcatArrayLiterals: # new in 1.41
  Enabled: true
Style/MapToSet: # new in 1.42
  Enabled: true
Style/MinMaxComparison: # new in 1.42
  Enabled: true
Style/RedundantConstantBase: # new in 1.40
  Enabled: true
Style/RedundantDoubleSplatHashBraces: # new in 1.41
  Enabled: true
Style/YodaExpression: # new in 1.42
  Enabled: true
Rails/ActionOrder: # new in 2.17
  Enabled: true
Rails/IgnoredColumnsAssignment: # new in 2.17
  Enabled: true
Rails/WhereNotWithMultipleConditions: # new in 2.17
  Enabled: true
RSpec/ClassCheck: # new in 2.13
  Enabled: true
RSpec/DuplicatedMetadata: # new in 2.16
  Enabled: true
RSpec/NoExpectationExample: # new in 2.13
  Enabled: true
RSpec/PendingWithoutReason: # new in 2.16
  Enabled: true
RSpec/SortMetadata: # new in 2.14
  Enabled: true
RSpec/Capybara/NegationMatcher: # new in 2.14
  Enabled: true
RSpec/Capybara/SpecificActions: # new in 2.14
  Enabled: true
RSpec/Capybara/SpecificFinders: # new in 2.13
  Enabled: true
RSpec/Capybara/SpecificMatcher: # new in 2.12
  Enabled: true
RSpec/FactoryBot/ConsistentParenthesesStyle: # new in 2.14
  Enabled: true
RSpec/FactoryBot/FactoryNameStyle: # new in 2.16
  Enabled: true
RSpec/Rails/HaveHttpStatus: # new in 2.12
  Enabled: true
RSpec/Rails/InferredSpecType: # new in 2.14
  Enabled: true